<?php
/**
 * Created by PhpStorm.
 * User: ashima
 * Date: 19/1/17
 * Time: 3:05 PM
 */

namespace MyApp\controllers;

use MyApp\APIRoutes;
use MyApp\helpers\ArticleHelper;
use MyApp\helpers\PitchVisionUtils;
use MyApp\request\ArticleRequest;
use MyApp\request\TestRequest;
use MyApp\Slim;

/**
 * Class ArticleController
 * @package MyApp\controllers
 */
class ArticleController extends Controller {

	protected $helper;

	function __construct(Slim $app) {
		$this->helper = ArticleHelper::getInstance();
		parent::__construct($app); // TODO: Change the autogenerated stub
	}

	function routes() {
		$this->app->get('/article/find/:id',$this->validate((new TestRequest())->anotherRules()),[$this,'getArticle'])->name("find");
		$this->app->get('/article/findall',[$this,'getArticles'])->name("findAll");
		$this->app->post('/article/create',$this->validate((new ArticleRequest())->rule()),[$this,'createArticle'])->name("create");

		$this->app->get('/article/findall-web',[$this,'getArticlesWeb'])->name("findAll");
		$this->app->map('/article/create-web',[$this,'createArticleWeb'])->via('GET','POST');
		$this->app->map('/article/update-web/:id',[$this,'updateArticleWeb'])->name("update")->via('GET','PUT');
		$this->app->delete('/article/delete-web',[$this,'deleteArticleWeb'])->name("Delete");
	}

	public function read(){
		$this->app->getLog()->emergency("OOP");
		print_r($this->app->router->getCurrentRoute()->getParams());
		echo "You are in read of demo. Your app name is :".$this->app->getName();
		$this->app->urlFor("find",['id'=>'abcd']);

	}

	public function getArticle(){
		$article = $this->helper->findArticle($this->app->router->getCurrentRoute()->getParam('id'));
		$this->setHttpStatus(($article)?200:204);
		$this->response->setData($article->toArray());
		$this->respond();
	}

	/**
	 *
	 */
	public function getArticles(){
		$this->app->getLog()->info("this is good");
		$articles = $this->helper->findArticles();
			$this->setHttpStatus(($articles) ? 200 : 204);
			$this->response->setData($articles->toArray());
			$this->respond();
	}


	public function createArticle(){
		$allPostVar =$this->app->request->post();
		$article = new ArticleRequest();
		$article->loadFromAPI($allPostVar);
		$status = $this->helper->saveArticle($article);
		if($status){
			$data = ['message'=>'created sucessfully'];
			$responseStatus = ($data)?201:404;
			$this->setHttpStatus($responseStatus);
			$this->response->setData($data);
			$this->respond();
		}
	}

	public function getArticlesWeb() {
		$articles = $this->helper->findArticles();
		$params = array('data' => $articles,
			'base_url' => $this->app->baseUrl,
			'title' => 'Listing all articles'
		);
		echo $this->app->twig->render(APIRoutes::GROUP_ARTICLE."/view-articles.html.twig", $params);
	}
	public function createArticleWeb(){

		if ($this->app->request->isPost()) {
			$this->_validate((new ArticleRequest())->rule());
			$allPostVar =$this->app->request()->post();
			$article = new ArticleRequest();
			$article->loadFromAPI($allPostVar);
			$status = $this->helper->saveArticle($article);
			if($status){
				$this->app->flash('success', 'Record Updated sucessfully');
				$this->app->redirect($this->app->baseUrl.'/article/findall-web');
			}
		}
		$authors = PitchVisionUtils::arrayMap($this->helper->getAuthors()->toArray(), 'Id', 'AuthorName');
		$params = [
			'base_url' => $this->app->baseUrl,
			'title' => 'Create Articles',
			'authors' =>$authors
		];
		echo $this->app->twig->render(APIRoutes::GROUP_ARTICLE."/add-article.html.twig", $params);
	}

	/**
	 * @throws \Exception
	 */
	public function updateArticleWeb(){
		if ($this->app->request->isPut()) {
			$this->_validate((new ArticleRequest())->rule());
			$allPostVar = $this->app->request->post();
			$model = new ArticleRequest();
			$model->loadFromAPI($allPostVar);
			$response = $this->helper->updateArticle($model);
			if ($response) {
				$this->app->flash('success', 'Record Updated sucessfully');
				$this->app->redirect($this->app->baseUrl.'/article/findall-web');
			}
		}
		$article = $this->helper->findArticle($this->app->router->getCurrentRoute()->getParam('id'));
		$authors = PitchVisionUtils::arrayMap($this->helper->getAuthors()->toArray(), 'Id', 'AuthorName');
		$params = [
			'data' => $article->toArray(),
			'base_url' => $this->app->baseUrl,
			'title' => 'Edit Articles',
			'authors' =>$authors
		];
		echo $this->app->twig->render(APIRoutes::GROUP_ARTICLE."/edit-article.html.twig", $params);
	}

	public function deleteArticleWeb() {
		$allPostVar = $this->app->request->post();
		if (!isset($allPostVar['id']) || empty($allPostVar['id'])) {
			$this->app->redirect($this->app->baseUrl.'/article/findall-web');
		}
		$this->app->flash('success', 'Record Deleted');
		$articleId = $allPostVar['id'];
		$this->helper->deleteArticle($articleId);
		$this->app->redirect($this->app->baseUrl.'/article/findall-web');
	}



}